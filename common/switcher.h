#ifndef SWITCHER_H
#define SWITCHER_H

#include <QtGui>
#include "constants.h"

/*
  Класс переключателя страниц для таблицы.
  В зависимости от режима отображения данных, включает в себя различные элементы.
  -- постраничный режим:
     -- кнопки "на первую страницу", "на предыдущую страницу", "на следующую страницу", "на последнюю страницу"
     -- редактируемое текстовое поле, содержащее номер страницы
     -- надпись (label) с общим количеством страниц
     -- редактируемое текстовое поле, содержащее кол-во элементов на странице
     -- надпись (label) "на странице"
     -- кнопка переключения в одностраничный режим
  -- одностраничный режим:
     -- надпись (label), содержащая общее кол-во элементов
     -- кнопка переключения в постраничный режим

  Переключатель является элементом класса Table и жёстко привязан к родительской таблице.
  При использовании одного из элементов управления (смены страницы, кол-ва элементов на странице, режима)
  родительскому объекту класса Table высылается соответствующий сигнал.
*/

class Switcher : public QWidget
{
    Q_OBJECT
public:
    explicit Switcher(QWidget *parent = 0);         // конструктор

    // функции, устанавливающие текст в соответствующие виджеты
    void set_current_page(int);                     // в текстовое поле "текущая страница"
    void set_total_pages(int);                      // в лейбл "всего страниц"
    void set_items_on_page(int);                    // в текстовое поле "элементов на странице"
    void set_show_all(int);                         // в кнопку "все на одной странице"
    void set_total_items_label(int);                // в надпись "всего элементов" (в одностраничном режиме)

    // функции переключения режима
    void switch_to_singlepage_mode();
    void switch_to_multipage_mode();

    // функция, возвращающая номер страницы в поле current_page
    int page_number();

private:
    // текущий режим (MULTIPAGE_MODE или SINGLEPAGE_MODE)
    int mode;

    // указатель на расположение. Будет активно использоваться, т.к. элементы в нём будут часто меняться
    QHBoxLayout *switcher_layout;

    // элементы слева направо:
    // для постраничного режима:
    QPushButton *first;                     // кнопка "На первую страницу"
    QPushButton *prev;                      // кнопка "На предыдущую страницу"
    QLineEdit *current_page;                // текстовое поле "На страницу №"
    QLabel *total_pages;                    // надпись, содержащая общее кол-во страниц
    QPushButton *next;                      // кнопка "На следующую страницу"
    QPushButton *last;                      // кнопка "На последнюю страницу"
    QLineEdit *items_on_page;               // текстовое поле "элементов на странице"
    QLabel *onpage_label;                   // надпись "элементов на странице"
    QPushButton *show_all;                  // кнопка "Все на одной странице"

    // для одностраничного режима
    QLabel *total_items;                    // надпись "%count% элементов"
    QPushButton *switch_to_multipages;      // кнопка переключения на постраничный режим

    // переменные, отвечающие за размеры элементов переключателя:
    int button_size;                        // размер обычной квадратной кнопки (переключения страниц)
    int total_label_size;                   // размер надписи, содержащей общее кол-во страниц
    int line_edit_size;                     // размер однострочного текстового поля
    int big_button_size;                    // размер кнопок переключения режима ("Показать все" и "Постранично")
    int total_items_size;                   // размер надписи, содержащей общее кол-во позиций

    // функция, устанавливающая параметры расположения и добавляющая элементы в него.
    // Если вызывается не из конструктора, предварительно switcher_layout должен быть очищен функцией clear_layout().
    // В зависимости от режима, добавляются и удаляются разные элементы.
    inline void set_layout();
    void clear_layout();

    // функция, устанавливающая размеры элементов.
    inline void set_sizes();

    // функция, определяющая шрифт и устанавливающая его на элементы
    inline void set_fonts();

    // функция, устанавливающая непрозрачный белый фон
    inline void set_background();

    // функция, соединяющая сигналы и слоты
    inline void connects();


signals:
    void page_changed(int);                 // высылается при смене номера страницы (нажатии на кнопку или ввода в текстовое поле)
    void items_on_page_changed(int);        // высылается при смене кол-ва элементов на странице
    void singlepage_mode_selected();        // высылается при нажатии на кнопку "Все на одной странице"
    void multipage_mode_selected();         // высылается при нажатии на кнопку "Постраничный режим"

private slots:
    // слоты, срабатывающие при нажатии на кнопку переключения
    void first_clicked();
    void prev_clicked();
    void next_clicked();
    void last_clicked();

    // слот, срабатывающий при вводе кол-ва элементов на странице
    void items_on_page_entered();

    // слот, срабатывающий при вводе номера страницы
    void page_entered();

    // слот, срабатывающий при нажатии на кнопку "Все на одной странице"
    void singlepage_mode_clicked();

    // слот, срабатывающий при нажатии на кнопку "Постраничный режим"
    void multipage_mode_clicked();
    
public slots:
    
};

#endif // SWITCHER_H
